# WebSocket Server Dockerfile for Ninu.mx Factory Control System
# Specialized container for real-time inventory and factory monitoring

# ================================
# Stage 1: Base Image
# ================================
FROM node:18-alpine AS base

# Install system dependencies
RUN apk update && apk upgrade && \
    apk add --no-cache \
    dumb-init \
    curl \
    ca-certificates \
    tzdata && \
    rm -rf /var/cache/apk/*

# Set timezone
ENV TZ=America/Mexico_City

# ================================
# Stage 2: Dependencies
# ================================
FROM base AS deps
WORKDIR /app

# Copy package files
COPY package.json package-lock.json ./

# Install dependencies
RUN npm ci --only=production --ignore-scripts && \
    npm cache clean --force

# ================================
# Stage 3: Builder
# ================================
FROM base AS builder
WORKDIR /app

# Copy dependencies
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Install all dependencies for build
RUN npm ci --ignore-scripts

# Build TypeScript files if needed
RUN if [ -f "tsconfig.json" ]; then npx tsc --noEmit; fi

# ================================
# Stage 4: Production Runtime
# ================================
FROM base AS runner
WORKDIR /app

# Create non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 websocket

# Create necessary directories
RUN mkdir -p /app/logs && \
    chown -R websocket:nodejs /app

# Copy production dependencies
COPY --from=deps --chown=websocket:nodejs /app/node_modules ./node_modules

# Copy application files
COPY --chown=websocket:nodejs server/websocket-inventory.js ./server.js
COPY --chown=websocket:nodejs server/package.json ./package.json
COPY --chown=websocket:nodejs lib/database.ts ./lib/database.ts

# Set proper permissions
RUN chmod -R 755 /app && \
    chmod -R 700 /app/logs

# Switch to non-root user
USER websocket

# Expose WebSocket port
EXPOSE 3001

# Environment variables
ENV NODE_ENV=production \
    WEBSOCKET_PORT=3001 \
    DB_HOST=localhost \
    DB_PORT=5432 \
    DB_NAME=ninu_factory_control \
    DB_USER=ninu_user \
    DB_PASSWORD=ninu_password \
    DB_MAX_CONNECTIONS=20 \
    DB_IDLE_TIMEOUT=30000 \
    DB_CONNECTION_TIMEOUT=5000 \
    REDIS_URL=redis://localhost:6379 \
    TZ=America/Mexico_City

# Labels
LABEL maintainer="Ninu Factory Team" \
      version="1.0.0" \
      description="Ninu Factory Control WebSocket Server" \
      environment="production"

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:3001/health || exit 1

# Use dumb-init for signal handling
ENTRYPOINT ["/usr/bin/dumb-init", "--"]

# Start the WebSocket server
CMD ["node", "server.js"]